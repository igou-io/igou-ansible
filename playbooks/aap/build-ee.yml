---
- name: Playbook to build Execution Environments from a remote git repo
  hosts: "{{ host }}"
  gather_facts: true
  vars:
    # git vars
    git_repo: "https://github.com/igou-io/igou-ansible.git"
    git_repo_path: execution-environments/igou-aap-ee-rhel9
    # registry vars
    registries:
      - registry: quay.io
        username: "{{ lookup('community.general.onepassword', 'quay', field='username', vault='awx') }}"
        password: "{{ lookup('community.general.onepassword', 'quay', field='password', vault='awx') }}"
      - registry: registry.redhat.io
        username: "{{ lookup('community.general.onepassword', 'redhat-registry', field='username', vault='awx') }}"
        password: "{{ lookup('community.general.onepassword', 'redhat-registry', field='password', vault='awx') }}"
    # ansible galaxy vars
    ansiblecfg: "{{ lookup('community.general.onepassword', 'aap_ansiblecfg', field='file', vault='awx') }}"
    # ee role vars
    ee_ansible_builder_paramters: "todo"
    ee_builder_dir: "{{ temp_dir.path }}/{{ git_repo_path }}"
    ee_update_base_images: false
    ee_pull_collections_from_hub: false
    ee_registry_dest: quay.io/igou
    ee_prune_images: false
    ee_image_push: false # Push in the playbook and not in the role
    ee_verbosity: 3
    ee_list:
      - name: igou-aap-ee-rhel9
        alt_name: Suported EE
        tags:
          - latest
          - "{{ '%Y%m%d%H%M%' | strftime(ansible_date_time.epoch) }}"
        skip_generation: true
  pre_tasks:
    - name: Validate that ansible-builder is installed on target system
      block:
        - name: Try command
          ansible.builtin.command: ansible-builder --version
          register: r_builder
          changed_when: false
      rescue:
        - name: Try to install with rpms
          block:
            - name: Install ansible-builder from rpm
              ansible.builtin.dnf:
                name:
                  - ansible-builder
                  - ansible-core
                enablerepo: ansible-automation-platform-2.5-for-rhel-9-x86_64-rpms
                state: present
              become: true
          rescue:
            - name: Install ansible-builder from pip # noqa package-latest
              ansible.builtin.pip:
                name:
                  - ansible-builder
                  - ansible-core
                state: latest

  tasks:
    - name: Set Up Directory
      block:
        - name: Create a temporary directory
          ansible.builtin.tempfile:
            state: directory
          register: temp_dir

        - name: Clone a repo with separate git directory
          ansible.builtin.git:
            repo: https://github.com/igou-io/igou-ansible.git
            dest: "{{ temp_dir.path }}"
            clone: true

        - name: Create ansible.cfg if defined
          ansible.builtin.copy:
            content: "{{ ansiblecfg }}"
            mode: 0644
            dest: "{{ ee_builder_dir }}/ansible.cfg"
          no_log: false
          when: ansiblecfg is defined

        - name: Hack around collection expecting execution_environment.yml
          ansible.builtin.copy:
            src: "{{ ee_builder_dir }}/execution-environment.yml"
            remote_src: true
            mode: 0644
            dest: "{{ ee_builder_dir }}/execution_environment.yml"

    - name: Login to container registries
      block:

      - name: podman login
        containers.podman.podman_login:
          username: "{{ item.username }}"
          password: "{{ item.password }}"
          registry: "{{ item.registry }}"
        with_items: "{{ registries }}"
        no_log: true

      - ansible.builtin.debug:
          var: ee_list

    - name: Include ee_builder role
      ansible.builtin.include_role:
        name: infra.ee_utilities.ee_builder
      tags:
        - build

      # Currently podman images returns localhost/name:latest

    - name: Push images
      block:
      - name: Push image to registry
        containers.podman.podman_image:
          name: "{{ ee_list[0].name }}"
          pull: false
          push: true
          username: "{{ ee_registry_username | default(omit, true) }}"
          password: "{{ ee_registry_password | default(omit, true) }}"
          auth_file: "{{ ee_auth_file | default(omit, true) }}"
          executable: "{{ ee_executable | default(omit, true) }}"
          ca_cert_dir: "{{ ee_ca_cert_dir | default(omit) }}"
          tag: "{{ ee_list[0].tag | default(omit) }}"
          validate_certs: "{{ ee_validate_certs | default(omit) }}"
          push_args:
            dest: "{{ ee_registry_dest }}/{{ ee_list[0].name }}{{ (':' + item) if item is defined }}"
            sign_by: "{{ ee_sign_by | default(omit) }}"
        with_items: "{{ ee_list[0].tags }}"
...