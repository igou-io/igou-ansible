---
- hosts: sno
  name: Sync designated serviceaccounts to secrets manager
  gather_facts: false
  tasks:
    - name: Get secrets from Kubernetes api
      block:
        - name: Get our list of tokens
          ansible.builtin.set_fact:
            update_list: "{{ update_list + update }}"
          vars:
            update_list: []
            update:
              - path: serviceaccount_token_secrets[{{ idx }}].token
                value: "{{ query('kubernetes.core.k8s', api_version='v1', kind='Secret', namespace=item.namespace, resource_name=item.name)[0].data.token | b64decode }}"
          loop: "{{ serviceaccount_token_secrets }}"
          loop_control:
            index_var: idx

        - name: Make the updates
          ansible.utils.update_fact:
            updates: "{{ update_list }}"
          register: results

        - ansible.builtin.set_fact:
            serviceaccount_token_secrets: "{{ results.serviceaccount_token_secrets }}"
      tags: get-secrets

    - name: Check for and delete old SA entries
      block:
        - name: Get onepassword items from vault
          ansible.builtin.shell:
            cmd: op item list --vault awx --format=json</dev/null
          register: result
          no_log: true

        - name: Get entries with common name
          ansible.builtin.set_fact:
            op_list: "{{ result.stdout | from_json | selectattr('title', 'search', (serviceaccount_token_secrets | map(attribute='name') | join('|')) ) | map(attribute='id') }}"

        - name: output op_list
          ansible.builtin.debug:
            var: op_list

        - name: Delete old entries
          ansible.builtin.shell:
            cmd: "op item delete --vault awx {{ item }}</dev/null"
          loop: "{{ op_list }}"
      tags: op-clean

    - name: Save token to 1password
      block:
        - name: Save auth info to 1password
          ansible.builtin.shell:
            cmd: 'op item create --category=password --title {{ item.name }} --vault=awx token[password]={{ item.token }} k8s_auth_host={{ k8s_auth_host }} notesPlain="Maintained with Ansible" --tags ansible</dev/null'
          loop: "{{ serviceaccount_token_secrets }}"
      tags: op-save