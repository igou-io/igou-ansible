---
- name: Generate an SNO ISO
  hosts: localhost
  gather_facts: false
  vars:
    single_node_ocp_iso_output_dir: /tmp/sno_iso
    openshift_install_url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.16.4/openshift-install-linux.tar.gz
    base_domain: igou.systems
    compute_replicas: 0
    control_plane_replicas: 1
    metadata_name: sno
    cluster_network_cidr: 10.128.0.0/14
    cluster_network_host_prefix: 23
    machine_network_cidr: 10.10.9.0/24
    network_type: OVNKubernetes
    service_network_cidr: 172.30.0.0/16
    installation_disk: /dev/disk/by-id/nvme-Samsung_SSD_990_PRO_2TB_S7KHNJ0X135879F
    pull_secret: "{{ lookup('community.general.onepassword', 'redhat_pullsecret', field='password', vault='awx') }}"
    ssh_key: |
      ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDumonWRoahxRVNYQT6dt76OkYyRThQ1e0Z/lAAMHcF4ffpZ138fZVWFHipT9f85EOqLkleqLWH6b3yj37+zOOCJ4lGoTSk0oFK92neiWLGV6ayTsvGojdV/cGrSefUP04FqleZirSiwv52FYEVA21vPNweaB70L3m4i7x7+VaHqVvtPh4qT0LnnWa2Yf6Oq6aQU0WUi7Sd388SVczcWVZlJ9L+iibjtir1sm0NUE4Z+sEwHYCOfO2m6YbN809z2GQz1q+DchM0cJhpwBmwH+MIv3wjahM4Khz+XNz4bjousak63BMnZwqROf4jkoQoMrvy3Q/4WZHvivkLTu/Bj51p7TtFPTN1XNHq4kt5qzLE63HsQyhOy9lGdZpLk8cigZe14aQ1NV5WbXm0YSgPIdXTNgpHtXxzUGHjioqEhoMx4q/YBbIHZAFrX8eYorE0nhSzE63HA4cJsjMS56zAs3gk6SaG2Vux04+NwhAOftbQpF8wzwbS0QzdPzw42XKHMVDmQEW/YtPw8XVC15mmHTu6QEYjzBBYU6Noi37PXWOrad2wkq5bInIdlH6VBRuOQ0tw+9VeUlnYUoS9fD8lxcsuGiN3iVaLH8R4kptirEnr0VUBblo3fe1M3YqNiuqXpcB4HJ7sEaKIcyqEetGFRYFmbnvj4iM9BJ5uDb3pgzzmYw== digou@redhat.com
    additional_manifests:
      - file_name: data-storage.yml
        contents: |
          # Generated by Butane; do not edit
          apiVersion: machineconfiguration.openshift.io/v1
          kind: MachineConfig
          metadata:
            labels:
              machineconfiguration.openshift.io/role: master
            name: 98-data-partition
          spec:
            config:
              ignition:
                version: 3.4.0
              storage:
                disks:
                  - device: /dev/nvme0n1
                    partitions:
                      - label: data
                        sizeMiB: 0
                        startMiB: 300000
                        typeGuid: E6D6D379-F507-44C2-A23C-238F2A3DF928
  tasks:

    - name: Create SNO ISO
      ansible.builtin.include_role:
        name: davidigou.single_node_ocp_iso
      tags:
        - build

# Add block and make this unmount any disks

    - name: Upload ISO image to PiKVM
      block:

      - name: Ensure no images are currently mounted
        ansible.builtin.uri:
          url: "https://pikvm.igou.systems/api/msd/set_connected?connected=0"
          validate_certs: false
          headers:
            X-KVMD-User: "{{ lookup('community.general.onepassword', 'pikvm', field='username', vault='awx') }}"
            X-KVMD-Passwd: "{{ lookup('community.general.onepassword', 'pikvm', field='password', vault='awx') }}"
          method: POST

      - name: Upload image to PiKVM
        ansible.builtin.uri:
          url: "https://pikvm.igou.systems/api/msd/write?image=rhcos-sno-{{ now(utc=true,fmt='%Y%m%d%H%M') }}.iso"
          validate_certs: false
          headers:
            X-KVMD-User: "{{ lookup('community.general.onepassword', 'pikvm', field='username', vault='awx') }}"
            X-KVMD-Passwd: "{{ lookup('community.general.onepassword', 'pikvm', field='password', vault='awx') }}"
          method: POST
          src: "{{ single_node_ocp_iso_output_dir }}/rhcos-live.iso"
        register: result
      tags: upload

    - name: Save secrets to 1password
      block:
      - name: Create a backup of kubeconfig
        ansible.builtin.copy:
          src: "{{ single_node_ocp_iso_output_dir }}/auth/kubeconfig"
          dest: "{{ single_node_ocp_iso_output_dir }}/auth/kubeconfig-no-ca"

      - name: Remove CA from kubeconfig-noca
        ansible.builtin.lineinfile:
          path: "{{ single_node_ocp_iso_output_dir }}/auth/kubeconfig-no-ca"
          regexp: '^.*certificate-authority-data:.*$'
          state: absent

      - name: Set item name
        ansible.builtin.set_fact:
          op_item_name: "SNO-Kubeconfig-{{ now(utc=true,fmt='%Y%m%d%H%M') }}"

      - name: Save auth info to 1password
        ansible.builtin.shell:
          cmd: >
            op item create --category=login --title {{ op_item_name }} --vault=awx \
            kubeconfig[file]={{ single_node_ocp_iso_output_dir }}/auth/kubeconfig \
            kubeconfig-no-ca[file]={{ single_node_ocp_iso_output_dir }}/auth/kubeconfig-no-ca</dev/null
      tags: op-save

- name: Copy auth directory to build server
  hosts: vscode.igou.systems
  gather_facts: false
  tasks:
    - name: Copy auth directory
      ansible.builtin.copy:
        src: /tmp/sno_iso/auth
        dest: "/home/igou/sno-auth/auth-{{ now(utc=true,fmt='%Y%m%d%H%M') }}"
      tags: copy