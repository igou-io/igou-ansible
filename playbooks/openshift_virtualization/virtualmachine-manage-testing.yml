---
- name: Set the state of an Kubevirt VM
  hosts: sno
  gather_facts: false
  vars:
    create_namespace: false
    set_stat: true
    rebuild: true
    vm_state: "present"
    vm_labels:
      created_by: "ansible"
      network.kubevirt.io/headlessService: headless
    vm_name: k3stest
    vm_instancetype: "u1.large"
    vm_namespace: "k3s-testing"
    vm_user_data:  |
      #cloud-config
      chpasswd:
        expire: false
      user: igou
      password: "changeme"
      ssh_authorized_keys:
        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDumonWRoahxRVNYQT6dt76OkYyRThQ1e0Z/lAAMHcF4ffpZ138fZVWFHipT9f85EOqLkleqLWH6b3yj37+zOOCJ4lGoTSk0oFK92neiWLGV6ayTsvGojdV/cGrSefUP04FqleZirSiwv52FYEVA21vPNweaB70L3m4i7x7+VaHqVvtPh4qT0LnnWa2Yf6Oq6aQU0WUi7Sd388SVczcWVZlJ9L+iibjtir1sm0NUE4Z+sEwHYCOfO2m6YbN809z2GQz1q+DchM0cJhpwBmwH+MIv3wjahM4Khz+XNz4bjousak63BMnZwqROf4jkoQoMrvy3Q/4WZHvivkLTu/Bj51p7TtFPTN1XNHq4kt5qzLE63HsQyhOy9lGdZpLk8cigZe14aQ1NV5WbXm0YSgPIdXTNgpHtXxzUGHjioqEhoMx4q/YBbIHZAFrX8eYorE0nhSzE63HA4cJsjMS56zAs3gk6SaG2Vux04+NwhAOftbQpF8wzwbS0QzdPzw42XKHMVDmQEW/YtPw8XVC15mmHTu6QEYjzBBYU6Noi37PXWOrad2wkq5bInIdlH6VBRuOQ0tw+9VeUlnYUoS9fD8lxcsuGiN3iVaLH8R4kptirEnr0VUBblo3fe1M3YqNiuqXpcB4HJ7sEaKIcyqEetGFRYFmbnvj4iM9BJ5uDb3pgzzmYw== digou@redhat.com
      runcmd:
        - [ systemctl, enable, --now, cockpit.socket ]
    vm_devices:
      interfaces:
        # - bridge: {}
        #   name: default
        - bridge: {}
          name: vlan2-network-bridge
          macAddress: "02:7a:1f:00:00:0f"
    vm_networks:
    # - name: default
    #   pod: {}
    - multus:
        networkName: vlan2-network-bridge
      name: vlan2-network-bridge
    vm_virtualmachineclusterpreference: "centos.stream9"
    vm_data_volume:
      sourceRef:
        name: centos-stream9
    # vm_services:
    # - name: service-1
    #   type: ClusterIP
    #   clusterIP: None
    #   ports:
    #     - target_port: 9090
    # - name: headless
    #   type: ClusterIP
    #   clusterIP: None
    #   ports:
    #     - target_port: 5434
    # - name: service-2
    #   type: NodePort
    #   ports:
    #     - target_port: 9090

    # vm_routes:
    #   - name: route-1
    #     service_name: service-1
    #     hostname: cockpit-test.apps.sno.igou.systems
    #     tls:
    #       insecureEdgeTerminationPolicy: Redirect
    #       termination: passthrough

  roles:
    - role: ansible-role-kubevirt_vm_manage
      when: rebuild is true
      vars:
        vm_state: absent
    - ansible-role-kubevirt_vm_manage

  pre_tasks:
    - name: Create NetworkAttachmentDefinition
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: k8s.cni.cncf.io/v1
          kind: NetworkAttachmentDefinition
          metadata:
            name: br1-network
            namespace: "{{ vm_namespace }}"
          spec:
            config: |
              {
                "cniVersion": "0.3.1",
                "name": "br1-network",
                "bridge": "br1",
                "type": "cnv-bridge"
              }


    - name: Create NetworkAttachmentDefinition
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: k8s.cni.cncf.io/v1
          kind: NetworkAttachmentDefinition
          metadata:
            name: vlan2-network-bridge
            namespace: "{{ vm_namespace }}"
          spec:
            config: |
              {
                "cniVersion": "0.3.1",
                "name": "vlan2-network-bridge",
                "bridge": "br1",
                "type": "cnv-bridge",
                "vlan": 2
              }

  tasks:

    - name: Set stat for vm name
      ansible.builtin.set_stats:
        data:
          host: "{{ vm_namespace }}-{{ vm_name }}"
        per_host: false
      when: set_stat is true



    # - name: Wait for VMI to have an IP address todo: Make this more flexible
    #   kubevirt.core.kubevirt_vmi_info:
    #     name: "{{ vm_name }}"
    #     namespace: "{{ vm_namespace }}"
    #   register: vmi_info
    #   until: vmi_info.resources[0].status.interfaces[0].ipAddress is defined
    #   retries: 30
    #   delay: 10
    #   ignore_errors: yes
    #   when: check_for_ip is true