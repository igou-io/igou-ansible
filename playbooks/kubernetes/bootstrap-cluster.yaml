---
- hosts: "{{ host }}"
  name: Bootstrap k3s cluster
  gather_facts: false
  tasks:
    - name: Set Up Directory
      block:
        - name: Create a temporary directory
          ansible.builtin.tempfile:
            state: directory
          register: temp_dir

        - name: Clone a repo with separate git directory
          ansible.builtin.git:
            repo: https://github.com/igou-io/igou-kubernetes.git
            dest: "{{ temp_dir.path }}"
            clone: true

        - name: Get kubeconfig
          ansible.builtin.copy:
            content: "{{ kubeconfig }}"
            mode: 0644
            dest: "{{ temp_dir.path }}/kubeconfig"
          no_log: false

    - name: Create objects
      environment:
        K8S_AUTH_KUBECONFIG: "{{ temp_dir.path }}/kubeconfig"
      block:

        - name: Download external-secrets crds manifest to the cluster.
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/deploy/crds/bundle.yaml
            dest: ./eso-crds.yml
            mode: '0664'
            force: true

        - name: Apply crds manifest to the cluster.
          kubernetes.core.k8s:
            state: present
            src: ./eso-crds.yml

        - name: Create argocd namespace
          kubernetes.core.k8s:
            name: argocd
            api_version: v1
            kind: Namespace
            state: present

        - name: Deploy ArgoCD
          kubernetes.core.k8s:
            state: present
            definition: '{{ lookup("kubernetes.core.kustomize", dir="https://github.com/igou-io/igou-kubernetes/bootstrap/argocd/overlays/" + overlay + "?ref=master") }}'

        - name: Create app of apps
          kubernetes.core.k8s:
            state: present
            src: '{{ "https://raw.githubusercontent.com/igou-io/igou-kubernetes/master/bootstrap/applications/" + overlay + "/application-of-applications-application.yml" }}'

        - name: Create external secrets namespace
          kubernetes.core.k8s:
            name: external-secrets
            api_version: v1
            kind: Namespace
            state: present
          register: stdout

        - name: Create Credentials secret for OPC
          kubernetes.core.k8s:
            state: present
            force: true
            definition:
              apiVersion: v1
              kind: Secret
              metadata:
                name: 1p-credentials
                namespace: external-secrets
              type: Opaque
              data:
                1password-credentials.json: "{{ onepassword_credentials | b64encode | b64encode }}"

        - name: Create Token secret for OPC
          kubernetes.core.k8s:
            state: present
            force: true
            definition:
              apiVersion: v1
              kind: Secret
              metadata:
                name: onepassword-connect-token
                namespace: external-secrets
              type: Opaque
              data:
                token: "{{ onepassword_token | b64encode }}"

        - name: Construct the data dictionary
          ansible.builtin.set_fact:
            data_dict: >
              {
                "{{ onepassword_vault }}": 1
              }

        - name: Create ClusterSecretStore
          kubernetes.core.k8s:
            state: present
            apply: true
            definition:
              apiVersion: external-secrets.io/v1beta1
              kind: ClusterSecretStore
              metadata:
                name: onepassword
                namespace: external-secrets
              spec:
                conditions:
                  - namespaceSelector:
                    matchLabels:
                      external.secrets.io/enabled: true
                provider:
                  onepassword:
                    connectHost: http://onepassword-connect:8080
                    vaults: "{{ data_dict }}"
                    auth:
                      secretRef:
                        connectTokenSecretRef:
                          name: onepassword-connect-token
                          key: token
                          namespace: external-secrets

        - name: Remove temp_dir
          ansible.builtin.file:
            path: "{{ temp_dir.path }}"
            state: absent
