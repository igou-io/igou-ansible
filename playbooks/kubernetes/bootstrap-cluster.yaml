---
- hosts: "{{ host }}"
  name: Bootstrap k3s cluster
  gather_facts: false
  tasks:
    - name: Create objects
      block:

        # - name: create external secrets namespace
        #   kubernetes.core.k8s:
        #     state: present
        #     definition:
        #       apiVersion: v1
        #       kind: Namespace
        #       metadata:
        #         name: external-secrets

        # - name: create argocd namespace
        #   kubernetes.core.k8s:
        #     state: present
        #     definition:
        #       apiVersion: v1
        #       kind: Namespace
        #       metadata:
        #         name: argocd
        #         labels:
        #           external.secrets.io/enabled: "true"

        - name: Apply external-secrets crds manifest to the cluster.
          kubernetes.core.k8s:
            state: present
            src: 'https://raw.githubusercontent.com/external-secrets/external-secrets/main/deploy/crds/bundle.yaml'

        - name: Apply argocd crds manifest to the cluster.
          kubernetes.core.k8s:
            state: present
            definition: '{{ lookup("kubernetes.core.kustomize", dir="https://github.com/argoproj/argo-cd/manifests/crds", enable_helm=true) }}'

        - name: Deploy ArgoCD
          kubernetes.core.k8s:
            state: present
            definition: '{{ lookup("kubernetes.core.kustomize", dir="https://github.com/igou-io/igou-kubernetes/config/" + cluster + "argocd?ref=master") }}'

        - name: Create Credentials secret for OPC
          kubernetes.core.k8s:
            state: present
            force: true
            definition:
              apiVersion: v1
              kind: Secret
              metadata:
                name: 1p-credentials
                namespace: external-secrets
              type: Opaque
              data:
                1password-credentials.json: "{{ onepassword_credentials | b64encode | b64encode }}"

        - name: Create Token secret for OPC
          kubernetes.core.k8s:
            state: present
            force: true
            definition:
              apiVersion: v1
              kind: Secret
              metadata:
                name: onepassword-connect-token
                namespace: external-secrets
              type: Opaque
              data:
                token: "{{ onepassword_token | b64encode }}"

        - name: Construct the data dictionary
          ansible.builtin.set_fact:
            data_dict: >
              {
                "{{ onepassword_vault }}": 1
              }

        - name: Create ClusterSecretStore
          kubernetes.core.k8s:
            state: present
            apply: true
            definition:
              apiVersion: external-secrets.io/v1beta1
              kind: ClusterSecretStore
              metadata:
                name: onepassword
                namespace: external-secrets
              spec:
                conditions:
                  - namespaceSelector:
                      matchLabels:
                        external.secrets.io/enabled: "true"
                provider:
                  onepassword:
                    connectHost: http://onepassword-connect:8080
                    vaults: "{{ data_dict }}"
                    auth:
                      secretRef:
                        connectTokenSecretRef:
                          name: onepassword-connect-token
                          key: token
                          namespace: external-secrets
