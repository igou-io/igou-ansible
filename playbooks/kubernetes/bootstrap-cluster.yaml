---
- hosts: "{{ host }}"
  name: Bootstrap k3s cluster
  gather_facts: false
  tasks:
    - name: Set Up Directory
      block:
        - name: Create a temporary directory
          ansible.builtin.tempfile:
            state: directory
          register: temp_dir

        - name: Clone a repo with separate git directory
          ansible.builtin.git:
            repo: https://github.com/igou-io/igou-kubernetes.git
            dest: "{{ temp_dir.path }}"
            clone: true

        - name: Download Helm install script
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            dest: "{{ temp_dir.path }}/get_helm.sh"
            mode: '0700'

        - name: Download and install Helm
          ansible.builtin.command:
            cmd: "{{ temp_dir.path }}/get_helm.sh"
          environment:
            HELM_INSTALL_DIR: "{{ temp_dir.path }}"
            USE_SUDO: false
          ignore_errors: true

        - name: Get kubeconfig
          ansible.builtin.copy:
            content: "{{ kubeconfig }}"
            mode: 0644
            dest: "{{ temp_dir.path }}/kubeconfig"
          no_log: true

    - name: Create objects
      environment:
        K8S_AUTH_KUBECONFIG: "{{ temp_dir.path }}/kubeconfig"
      block:
        - name: Create external secrets namespace
          kubernetes.core.k8s:
            name: external-secrets
            api_version: v1
            kind: Namespace
            state: present

        - name: Create Credentials secret for OPC
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: v1
              kind: Secret
              metadata:
                name: 1p-credentials
                namespace: external-secrets
              type: Opaque
              data:
                1password-credentials.json: "{{ onepassword_credentials | b64encode | b64encode }}"

        - name: Create Token secret for OPC
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: v1
              kind: Secret
              metadata:
                name: onepassword-connect-token
                namespace: external-secrets
              type: Opaque
              data:
                token: "{{ onepassword_token | b64encode }}"

        - name: Deploy prometheus operator CRDs
          kubernetes.core.helm:
            name: prometheus-operator-crds
            chart_ref: "{{ temp_dir.path }}/bootstrap/prometheus-operator-crds"
            namespace: default
            dependency_update: true
            binary_path: "{{ temp_dir.path }}/helm"

        - name: Deploy OPC + ESO
          kubernetes.core.helm:
            name: external-secrets
            chart_ref: "{{ temp_dir.path }}/apps/external-secrets"
            namespace: external-secrets
            dependency_update: true
            force: true
            binary_path: "{{ temp_dir.path }}/helm"

        - name: Create argocd namespace
          kubernetes.core.k8s:
            name: argocd
            api_version: v1
            kind: Namespace
            state: present

        - name: Deploy ArgoCD
          kubernetes.core.k8s:
            state: present
            definition: '{{ lookup("kubernetes.core.kustomize", dir="https://github.com/igou-io/igou-kubernetes/bootstrap/argocd/overlays/" + overlay + "?ref=master") }}'

        - name: Remove temp_dir
          ansible.builtin.file:
            path: "{{ temp_dir.path }}"
            state: absent
